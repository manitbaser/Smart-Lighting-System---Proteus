VARS:  
;MAIN PROGRAM        
COUNTER DW 00H
RCOUNTER DB 00H,00H,00H,00H,00H,00H 
GATE DB 0 
STRLEN DB 0
EMPTY DB 'EMPTY'
FULL DB 'FULL'

;8255-0
PORTA0 EQU 00H
PORTB0 EQU 02H
PORTC0 EQU 04H
COMMAND_ADDRESS0 EQU 06H

;8255-1  
INPUTS EQU 0AH
LCD_DATA EQU 08H
LCD_MOTOR_CONTROL EQU 0CH
CREG_IO EQU 0EH

JMP     ST1 
DB     1001 DUP(0)

ST1:  
; INTIALIZE DS, ES,SS TO START OF RAM
MOV       AX,02000H
MOV       DS,AX
MOV       ES,AX
MOV       SS,AX
MOV       SP,02FFEH

;INTIALISE PORTA AND PORTB AS INPUT & PORTC AS OUTPUT FOR 8255-0
MOV     AL,92H
OUT     COMMAND_ADDRESS0,AL 

;INITIALISE PORTA AS OUTPUT FOR LCD AND PORTC UPPER AS INPUT AND PORTC LOWER AS OUTPUT
MOV AL,10000000B
OUT CREG_IO,AL 
MOV AL,00H  
OUT 04H,AL

;INITIALISE HARDWARE
; INITIALISE THE LCD
; CHECK FOR BUSY STATUS
; CLEAR THE SCREEN
; DISPLAY 'EMPTY'
;WRITING ON THE COMMAND REGISTER FOR INITIALIZATION

STARTUP:
LCD_INITIALIZATION 
CALL UPDATE_THE_LCD 
CALL DELAY_1S
CALL DELAY_1S 
;STOPPING_THE_MOTOR
;CALL UPDATE_THE_LCD
;CALL DELAY_1S
;CALLING LCD INITIALIZATION 

;;CHECK FOR ENTRY TO DOOR WHICH TRIGGERS OPENING OF DOOR
X1: IN AL,02H
    AND AL,80H
    CMP AL,80H   
    JNZ X2
Y1: IN AL,02H
    AND AL,40H
    CMP AL,40H  
    JNZ Y1
    ADD COUNTER,1    
    MOV GATE,1
    MOTOR_CLOCKWISE 
    CALL DELAY_1S
    STOPPING_THE_MOTOR     
    CALL DELAY_1S
    CALL DELAY_1S 

;;CHECK FOR EXIT FROM DOOR WHICH TRIGGERS CLOSING OF DOOR
X2: IN AL,02H
    AND AL,40H
    CMP AL,40H 
    JNZ X3
Y2: IN AL,02H
    AND AL,80H
    CMP AL,80H
    JNZ Y2
    SUB COUNTER,1
    MOV GATE,0
     MOTOR_ANTICLOCKWISE 
     CALL DELAY_1S
     STOPPING_THE_MOTOR
     CALL DELAY_1S
    CALL DELAY_1S
CALL DELAY  

;;CHECK FOR ENTRY ON OTHER SIDE OF DOOR WHICH TRIGGERS CLOSING OF DOOR
X3: IN AL,02H
    AND AL,20H
    CMP AL,20H
    JNZ X4
Y3: IN AL,02H
    AND AL,10H
    CMP AL,10H
    JNZ Y3 
    MOV GATE,0 
     MOTOR_ANTICLOCKWISE 
     CALL DELAY_1S
     STOPPING_THE_MOTOR  
     CALL DELAY_1S
    CALL DELAY_1S
;;CHECK FOR EXIT ON OTHER SIDE OF DOOR WHICH TRIGGERS OPENING OF DOOR
X4: IN AL,02H
    AND AL,10H
    CMP AL,10H
    JNZ X5
Y4: IN AL,02H
    AND AL,20H
    CMP AL,20H
    JNZ Y4   
    MOV GATE,1 
     MOTOR_CLOCKWISE 
     CALL DELAY_1S
     STOPPING_THE_MOTOR 
     CALL DELAY_1S
    CALL DELAY_1S
CALL DELAY          
;;CHECK FOR ENTRY IN ROW1
X5: IN AL,02H
    AND AL,08H
    CMP AL,08H
    JNZ X6
Y5: IN AL,02H
    AND AL,04H
    CMP AL,04H 
    JNZ Y5
    ADD RCOUNTER,1 
 
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR EXIT FROM ROW1
X6: IN AL,02H
    AND AL,04H
    CMP AL,04H
    JNZ X7
Y6: IN AL,02H
    AND AL,08H
    CMP AL,08H
    JNZ Y6     
    SUB RCOUNTER,1
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR ENTRY IN ROW2
X7: IN AL,02H
    AND AL,02H
    CMP AL,02H
    JNZ X8
Y7: IN AL,02H
    AND AL,01H
    CMP AL,01H
    JNZ Y7  
    ADD RCOUNTER+1,1 
  
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR EXIT FROM ROW3
X8: IN AL,02H
    AND AL,01H
    CMP AL,01H
    JNZ X9
Y8: IN AL,02H
    AND AL,02H
    CMP AL,02H
    JNZ Y8 
    SUB RCOUNTER+1,1
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR ENTRY IN ROW3
X9: IN AL,00H
    AND AL,80H
    CMP AL,80H
    JNZ X10
Y9: IN AL,00H
    AND AL,40H
    CMP AL,40H
    JNZ Y9  
    ADD RCOUNTER+2,1
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR EXIT FROM ROW3
X10: IN AL,00H
    AND AL,40H
    CMP AL,40H
    JNZ X11
Y10: IN AL,00H
    AND AL,80H
    CMP AL,80H
    JNZ Y10
    SUB RCOUNTER+2,1
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR ENTRY IN ROW4
X11: IN AL,00H
    AND AL,20H
    CMP AL,20H
    JNZ X12
Y11: IN AL,00H
    AND AL,10H
    CMP AL,10H
    JNZ Y11    
    ADD RCOUNTER+3,1 
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR EXIT FROM ROW4
X12: IN AL,00H
    AND AL,10H
    CMP AL,10H
    JNZ X13
Y12: IN AL,00H
    AND AL,20H
    CMP AL,20H
    JNZ Y12 
    SUB RCOUNTER+3,1 
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR ENTRY IN ROW5
X13: IN AL,00H
    AND AL,08H
    CMP AL,08H
    JNZ X14
Y13: IN AL,00H
    AND AL,04H
    CMP AL,04H
    JNZ Y13 
    ADD RCOUNTER+4,1  
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR EXIT FROM ROW5
X14: IN AL,00H
    AND AL,04H
    CMP AL,04H
    JNZ X15
Y14: IN AL,00H
    AND AL,08H
    CMP AL,08H
    JNZ Y14
    SUB RCOUNTER+4,1 
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR ENTRY IN ROW6
X15: IN AL,00H
    AND AL,02H
    CMP AL,02H
    JNZ X16
Y15: IN AL,00H
    AND AL,01H
    CMP AL,01H
    JNZ Y15 
    ADD RCOUNTER+5,1
CALL DELAY_1S
CALL DELAY_1S
;;CHECK FOR EXIT FROM ROW6
X16: IN AL,00H
    AND AL,01H
    CMP AL,01H
    JNZ X
Y16: IN AL,00H
    AND AL,02H
    CMP AL,02H
    JNZ Y16
    SUB RCOUNTER+5,1
CALL DELAY_1S
CALL DELAY_1S
;;OUTPUT FOR LEDS IS MADE 1 WHEREVER RCOUNTER IS 1

X:  MOV AL,00000000B
    MOV BL,00000001B
    MOV CX,06H
    LEA SI,RCOUNTER
Y:  MOV DL,[SI]
    CMP DL,00H
    JNZ Z
    JMP W
Z:  OR AL,BL 

W:  ROL BL,1 
    ADD SI,1
    DEC CX
    CMP CX,00H
    JNZ Y 
    OUT 04H,AL 
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    CALL DELAY_1S
    

DISP: CALL UPDATE_THE_LCD 
      JMP X1

;;;;;UPTIL HERE ALL LEDS IN THE ROWS WITH NON ZERO COUNT WILL GLOW
DELAY_1S PROC
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    CALL DELAY
    RET
DELAY_1S ENDP

DELAY PROC
    MOV CX, 1325 ;1325*15.085 USEC = 20 MSEC
    W1: 
        NOP
        NOP
        NOP
        NOP
        NOP
    LOOP W1
    RET
DELAY ENDP

MACROS:  

MOTOR_ANTICLOCKWISE MACRO
IN AL, LCD_MOTOR_CONTROL
AND AL, 11111100B
OR AL, 00000010B
OUT LCD_MOTOR_CONTROL, AL
ENDM        

MOTOR_CLOCKWISE MACRO
IN AL, LCD_MOTOR_CONTROL
AND AL, 11111100B
OR AL, 00000001B
OUT LCD_MOTOR_CONTROL, AL 
ENDM

STOPPING_THE_MOTOR MACRO
IN AL, LCD_MOTOR_CONTROL
AND AL, 11111100B
OR AL, 00000000B
OUT LCD_MOTOR_CONTROL, AL 
ENDM  

SET_THE_LCD_MODE MACRO
		IN AL, LCD_MOTOR_CONTROL
		AND AL, 00011111B
		OR AL, BL
		OUT LCD_MOTOR_CONTROL, AL
ENDM

LCD_INITIALIZATION MACRO
		MOV AL, 00001111B
		OUT LCD_DATA, AL
		MOV BL, 00100000B
SET_THE_LCD_MODE
		MOV BL, 00000000B
SET_THE_LCD_MODE
ENDM

LCD_CLEAR MACRO
		MOV AL, 00000001B
OUT LCD_DATA, AL 
		MOV BL,00100000B
SET_THE_LCD_MODE  
		MOV BL,00000000B
SET_THE_LCD_MODE
ENDM

LCD_PUTCH MACRO
		PUSH AX
		OUT LCD_DATA,AL  
		;CALL DELAY_1S
		MOV BL,10100000B
SET_THE_LCD_MODE
		MOV BL,10000000B
SET_THE_LCD_MODE
		POP AX
		ENDM

PUTSTRING_ON_LCD MACRO
		MOV CH,00H
		MOV CL, STRLEN
PUTTING:
		MOV AL, [DI]
LCD_PUTCH
		INC DI
		LOOP PUTTING
ENDM

LCD_BCD MACRO
		MOV AX, COUNTER
		MOV CX, 0
CONVERTING:
		MOV BL, 10
		DIV BL
		ADD AH, '0'
		MOV BL, AH
		MOV BH, 0
		PUSH BX
		INC CX
		MOV AH, 0
		CMP AX, 0
JNE CONVERTING
PRINTING:
POP AX
LCD_PUTCH
LOOP PRINTING
ENDM

PROCS:
		UPDATE_THE_LCD PROC NEAR
		LCD_CLEAR
		MOV AL, ' '
		LCD_PUTCH
		CMP COUNTER,00H
		JNZ NOTEMPTY
		LEA DI, EMPTY
		MOV STRLEN, 05H
		JMP LOADED
		NOTEMPTY:
		CMP COUNTER,200
		JL NOTFULL
		LEA DI, FULL
		MOV STRLEN, 04H
		JMP LOADED
		NOTFULL:
		LCD_BCD
		RET
		LOADED: 
		;CALL DELAY_1S
		PUTSTRING_ON_LCD 
		CALL DELAY_1S
			; CALL DELAY_1S
		RET
		UPDATE_THE_LCD ENDP  




